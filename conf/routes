# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

GET           /                                                                                  controllers.HomeController.index()
GET           /cookie-usage                                                                      controllers.HomeController.cookieUsage()
GET           /terms                                                                             controllers.HomeController.terms()
GET           /privacy                                                                           controllers.HomeController.privacy()
GET           /faq                                                                               controllers.HomeController.faq()

GET           /sitemap.xml                                                                       controllers.HomeController.sitemap()
GET           /robots.txt                                                                        controllers.HomeController.robots()

GET           /ytree                                                                             controllers.TreeController.ytree()
GET           /mtree                                                                             controllers.TreeController.mtree()
GET           /ytree/fragment                                                                    controllers.TreeController.yTreeFragment(rootHaplogroup: Option[String])
GET           /mtree/fragment                                                                    controllers.TreeController.mTreeFragment(rootHaplogroup: Option[String])

GET           /haplogroups/snp-sidebar/placeholder                                               controllers.TreeController.emptySnpDetailSidebarPlaceholder
GET           /haplogroups/snp-sidebar/:haplogroupName                                           controllers.TreeController.getSnpDetailSidebar(haplogroupName: String, haplogroupType: models.HaplogroupType)


GET           /references                                                                        controllers.PublicationController.index()
GET           /references/details                                                                controllers.PublicationController.getAllPublicationsWithDetailsHtml(page: Option[Int], pageSize: Option[Int])
GET           /references/details/:publicationId/biosamples                                      controllers.BiosampleReportController.getBiosampleReportHTML(publicationId: Int, page: Option[Int] ?= Some(1))

GET           /publications/submit                                                               controllers.PublicationController.showSubmissionForm()
POST          /publications/submit                                                               controllers.PublicationController.submitPaper()

GET           /coverage-benchmarks                                                               controllers.CoverageController.index()

# Contact form routes
GET           /contact                                                                           controllers.ContactController.show()
POST          /contact                                                                           controllers.ContactController.submit()

GET           /api/v1/y-tree                                                                     controllers.TreeController.apiYTree(rootHaplogroup: Option[String])
GET           /api/v1/mt-tree                                                                    controllers.TreeController.apiMTree(rootHaplogroup: Option[String])

GET           /api/v1/benchmarks                                                                 controllers.CoverageController.apiBenchmarks()

GET           /api/v1/references/details                                                         controllers.PublicationController.getAllPublicationsWithDetailsJson()
GET           /api/v1/references/details/:publicationId/biosamples                               controllers.BiosampleReportController.getBiosampleReportJSON(publicationId: Int)

# Sample studies endpoint
GET           /api/v1/biosample/studies                                                          controllers.BiosampleController.getSamplesWithStudies()

# Biosample API endpoint
PATCH         /api/private/biosamples/:id                                                        controllers.BiosampleController.updateBiosample(id: Int)
GET           /api/private/biosamples/search                                                     controllers.BiosampleController.findByAliasOrAccession(query: String)

# Biosample Original Haplogroup endpoints
PUT           /api/private/biosamples/:biosampleId/publications/:publicationId/haplogroup        controllers.BiosampleOriginalHaplogroupController.updateOrCreateHaplogroup(biosampleId: Int, publicationId: Int)
GET           /api/private/biosamples/:biosampleId/publications/:publicationId/haplogroup        controllers.BiosampleOriginalHaplogroupController.getHaplogroup(biosampleId: Int, publicationId: Int)
DELETE        /api/private/biosamples/:biosampleId/publications/:publicationId/haplogroup        controllers.BiosampleOriginalHaplogroupController.deleteHaplogroup(biosampleId: Int, publicationId: Int)

# External Biosample API endpoints
POST          /api/private/external/biosamples                                                   controllers.ExternalBiosampleController.create
POST          /api/private/external/biosamples/:sampleGuid/sequences                             controllers.ExternalBiosampleController.addSequenceData(sampleGuid: java.util.UUID)
POST          /api/private/external/biosamples/:sampleGuid/publication                           controllers.ExternalBiosampleController.linkPublication(sampleGuid: java.util.UUID)

# --- API Routes (Handled by Tapir, including Swagger UI) ---
# Delegate all requests starting with /api to the Tapir-based ApiRouter
->            /api                                                                               controllers.ApiRouter

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                                                      controllers.Assets.versioned(path="/public", file: Asset)
->            /webjars                                                                           webjars.Routes