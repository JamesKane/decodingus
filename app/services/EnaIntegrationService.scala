package services

import models.domain.publications.EnaStudy
import play.api.Logging
import play.api.libs.ws.*
import play.api.libs.json.*

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

@Singleton
class EnaIntegrationService @Inject()(ws: WSClient)(implicit ec: ExecutionContext) extends Logging {

  // ENA Browser API for XML (often more detailed for studies)
  // For JSON, use the ENA Portal API
  private val enaPortalApiBaseUrl = "https://www.ebi.ac.uk/ena/portal/api/search"

  def getEnaStudyDetails(accession: String): Future[Option[EnaStudy]] = {
    // Example for PRJEB (Study) accessions. Other accessions (ERA, ERR, SRR) might need different queries.
    val query = s"study_accession=$accession"
    val fields = "study_accession,study_title,center_name,study_name,study_description" // Select relevant fields

    ws.url(enaPortalApiBaseUrl)
      .withQueryStringParameters(
        "result" -> "study",
        "query" -> query,
        "fields" -> fields,
        "format" -> "json"
      )
      .get()
      .map { response =>
        response.status match {
          case 200 =>
            val jsonArray = response.json.as[JsArray]
            jsonArray.value.headOption.map { studyJson =>
              EnaStudy(
                id = None, // Auto-generated by DB
                accession = (studyJson \ "study_accession").as[String],
                title = (studyJson \ "study_title").as[String],
                centerName = (studyJson \ "center_name").asOpt[String].getOrElse("N/A"), // Handle optional
                studyName = (studyJson \ "study_name").asOpt[String].getOrElse("N/A"),
                details = (studyJson \ "study_description").asOpt[String].getOrElse("")
              )
            }
          case _ =>
            // Handle API errors (e.g., log, return None)
            logger.error(s"Error fetching ENA study $accession: ${response.status} - ${response.body}")
            None
        }
      }
      .recover {
        case e: Exception =>
          println(s"Exception during ENA API call for $accession: $e")
          None
      }
  }
}