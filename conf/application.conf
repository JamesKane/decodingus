# https://www.playframework.com/documentation/latest/Configuration

play.http.secret.key="changeme"
play.http.secret.key=${?APPLICATION_SECRET}

# No need to create cookies in a read-only application.  Remove when appropriate
play.http.session.disabled=true

# Disable the startup banner
play.application.showBanner=false

play.modules.enabled += "modules.BaseModule"
play.modules.enabled += "modules.ServicesModule"

play.modules.enabled += "modules.RecaptchaModule"
play.modules.enabled += "modules.StartupModule"
play.modules.enabled += "modules.ApplicationModule"

play.cache.caffeine {
  # Default cache configuration
  default = {
    initial-capacity = 100
    maximum-size = 10000
    expire-after-write = 24h
  }
  # Specific cache configurations if needed
  sitemap = ${play.cache.caffeine.default}
}

# Tell Play to use Caffeine instead of the default EhCache
play.cache.createBoundCaches = false
play.modules.enabled += "play.api.cache.caffeine.CaffeineCacheModule"

recaptcha {
  enable = false
  enable = ${?ENABLE_RECAPTCHA}

  # Your existing recaptcha configuration here
  privateKey = "your-secret-key"
  privateKey = ${?RECAPTCHA_SECRET_KEY}
  publicKey = "your-site-key"
  publicKey = ${?RECAPTCHA_SITE_KEY}
}

# Apply evolutions automatically, disable in the production version
play.evolutions.autocommit=true

slick.dbs.default {
    profile="slick.jdbc.PostgresProfile$"
    db {
        numThreads = 32
        queueSize = 5000

        driver="org.postgresql.Driver"
        url="jdbc:postgresql://localhost:5432/decodingus_db"
        # Local Development Credentials
        username="decodingus_user"
        # Overridden in production on startup
        password="decodingus_password"
    }
}

contact {
  recipient.email = "your-email@domain.com"
  recipient.email = ${?CONTACT_RECIPIENT_EMAIL}  # Can be overridden by environment variable
}

pekko {
  loglevel = "DEBUG"
  stdout-loglevel = "DEBUG"
  jvm-exit-on-fatal-error = off

  quartz.schedules {
    # Publication Updater: Run every two weeks
    PublicationUpdater {
      # CRON expression for every two weeks at midnight UTC
      # This will trigger at 00:00:00 UTC on the 1st and 15th of every month.
      expression = "0 0 0 1,15 * ?"
      timezone = "UTC"
      description = "Refresh publication data from OpenAlex every two weeks"
    }
  }
}

openalex.mailToEmail="your-email@domain.com"

